<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>动态规划训练</title>
      <link href="/2020/01/06/dp-train/"/>
      <url>/2020/01/06/dp-train/</url>
      
        <content type="html"><![CDATA[<h1 id="取数字1"><a href="#取数字1" class="headerlink" title="取数字1"></a>取数字1</h1><h2 id="来源"><a href="#来源" class="headerlink" title="来源"></a>来源</h2><p>字节跳动飞书寒暑期实习笔试（2020-1-6）</p><h2 id="描述"><a href="#描述" class="headerlink" title="描述"></a>描述</h2><p>给定一个长度为$n$的序列$a[n]$，每次取出第$i$个数字获得其价值为$a[left]\times a[i]\times a[right]$ ，$a[left]$和$a[right]$分别对应第$i$个数字当前左边和右边的数字，每次取出一个数字后，$a[left]$和$a[right]$就成为相邻数字，求取完所有数字后能获得的最大价值</p><h2 id="输入"><a href="#输入" class="headerlink" title="输入"></a>输入</h2><p>输入两行数据</p><p>第一行输入序列长度$n,0&lt;n&lt;128$</p><p>第二行输入序列$a[n],0&lt;a[i]&lt;10$</p><h2 id="输出"><a href="#输出" class="headerlink" title="输出"></a>输出</h2><p>能获得的最大价值</p><h2 id="样例输入"><a href="#样例输入" class="headerlink" title="样例输入"></a>样例输入</h2><p>4<br>3 1 5 8</p><h2 id="样例输出"><a href="#样例输出" class="headerlink" title="样例输出"></a>样例输出</h2><p>167</p><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>这是一道区间DP，每次取完一段连续的数字后，能得到的最大值是固定的，即存在最优子结构</p><p>令$dp[i][j]$表示区间$[l,r]$之间能获得的最大值，每次都枚举区间$[l,r]$之间的下标$pos$，使得满足</p><p>$dp[l][r]=max(dp[l][r],dp[l][pos-1]+dp[pos+1][r]+a[pos]\times a[l-1]\times a[r+1])$</p><p>最终答案为$dp[1][n]$</p><h2 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h2><pre class="line-numbers language-c++"><code class="language-c++">#include <bits/stdc++.h>using namespace std;const int N=128;int arr[N],num;int dp[N][N];int main(){    scanf("%d",&num);    for(int i=1;i<=num;i++)    {        scanf("%d",&arr[i]);    }    arr[0]=arr[num+1]=1;    for(int i=0;i<=num+1;i++)    {        dp[i][i]=1;    }    for(int k=1;k<=num;k++)    {        for(int l=1;l<=num;l++)        {            int r=l+k-1;            for(int pos=l;pos<=r;pos++)            {                dp[l][r]=max(dp[l][r],dp[l][pos-1]+dp[pos+1][r]+arr[pos]*arr[l-1]*arr[r+1]);            }        }    }    printf("%d\n",dp[1][num]);}<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 动态规划 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
